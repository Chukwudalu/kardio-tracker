"use strict";const months=["January","February","March","April","May","June","July","August","September","October","November","December"];class Workout{date=new Date;id=(Date.now()+"").slice(-10);constructor(o,t,s){this.coords=o,this.distance=t,this.duration=s}_setDescription(){this.description=`${this.type[0].toUpperCase()}${this.type.slice(1)} on ${["January","February","March","April","May","June","July","August","September","October","November","December"][this.date.getMonth()]} ${this.date.getDate()}`}}class Running extends Workout{type="running";constructor(o,t,s,e){super(o,t,s),this.cadence=e,this.calcPace(),this._setDescription()}calcPace(){return this.pace=this.duration/(this.distance/60),this.pace}}class Cycling extends Workout{type="cycling";constructor(o,t,s,e){super(o,t,s),this.elevationGain=e,this.calcSpeed(),this._setDescription()}calcSpeed(){return this.speed=this.distance/this.duration,this.speed}}const sidebar=document.querySelector(".sidebar"),form=document.querySelector(".form"),containerWorkouts=document.querySelector(".workouts"),sidebarCancel=document.querySelector(".sidebar__cancelIcon"),workoutsLocator=document.querySelector(".workouts__locator"),inputType=document.querySelector(".form__input--type"),dropInModalInfo=document.querySelector(".dropInModalInfo"),dropInModalGuide=document.querySelector(".dropInModalGuide"),dropInModalCancel=document.querySelectorAll(".dropInModal__cancel"),inputDistance=document.querySelector(".form__input--distance"),inputDuration=document.querySelector(".form__input--duration"),inputCadence=document.querySelector(".form__input--cadence"),inputElevation=document.querySelector(".form__input--elevation");class App{#o;#t;#s=[];#e=13;constructor(){this.#a(),this.#n(),form.addEventListener("submit",this.#i.bind(this)),inputType.addEventListener("change",this.#r),containerWorkouts.addEventListener("click",this.#d.bind(this)),sidebarCancel.addEventListener("click",this.#c.bind(this)),workoutsLocator.addEventListener("click",this.#l.bind(this)),this.#u(),this.#p(),this.#h()||window.addEventListener("load",this.#m.bind(this))}#a(){navigator.geolocation&&navigator.geolocation.getCurrentPosition(this.#w.bind(this),geoError)}#w(o){const{latitude:t,longitude:s}=o.coords;this.#o=L.map("map").setView([t,s],this.#e),L.tileLayer("https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(this.#o),this.#o.on("click",this.#_.bind(this)),this.#s.forEach((o=>{this.#k(o)}))}#_(o){this.#t=o,form.classList.remove("hidden"),sidebar.classList.remove("sidebar--hide"),sidebar.classList.add("sidebar--show"),workoutsLocator.classList.contains("workouts__locator--show")&&(workoutsLocator.classList.remove("workouts__locator--show"),workoutsLocator.classList.add("workouts__locator--hide")),inputDistance.focus()}#c(o){sidebar.classList.contains("sidebar--show")&&(sidebar.classList.remove("sidebar--show"),sidebar.classList.add("sidebar--hide")),workoutsLocator.classList.contains("workouts__locator--hide")&&(workoutsLocator.classList.remove("workouts__locator--hide"),workoutsLocator.classList.add("workouts__locator--show"))}#l(o){workoutsLocator.classList.contains("workouts__locator--show")&&(workoutsLocator.classList.remove("workouts__locator--show"),workoutsLocator.classList.add("workouts__locator--hide")),form.classList.contains("hidden")||form.classList.add("hidden"),sidebar.classList.remove("sidebar--hide"),sidebar.classList.add("sidebar--show")}#r(){inputElevation.closest(".form__row").classList.toggle("form__row--hidden"),inputCadence.closest(".form__row").classList.toggle("form__row--hidden")}#i(o){const t=(...o)=>o.every((o=>Number.isFinite(o))),s=(...o)=>o.every((o=>o>0));o.preventDefault();const{lat:e,lng:a}=this.#t.latlng,n=(o.target.closest(".dropInModal"),inputType.value),i=+inputDistance.value,r=+inputDuration.value;let d;if("running"===n){const o=+inputCadence.value;if(!t(i,r,o)||!s(i,r,o))return alert("Inputs have to be a positive number");d=new Running([e,a],i,r,o)}if("cycling"===n){const o=+inputElevation.value;if(!t(i,r,o)||!s(i,r,o))return alert("Inputs have to be a positive number");d=new Cycling([e,a],i,r,o)}this.#s.push(d),this.#k(d),this.#v(d),this.#L(),this.#g(),inputCadence.value=inputDistance.value=inputDuration.value=inputElevation.value=""}#k(o){L.marker(o.coords).addTo(this.#o).bindPopup(L.popup({maxWidth:300,minWidth:100,autoClose:!1,closeOnClick:!1,className:`${o.type}-popup`})).setPopupContent(`${"running"===o.type?"üèÉ‚Äç‚ôÇÔ∏è":"üö¥‚Äç‚ôÄÔ∏è"} ${o.description}`).openPopup()}#v(o){let t=`\n            <li class="workout" data-id="${o.id}">\n                <h2 class="workout__title">${o.description}</h2>\n                <div class="workout__details">\n                    <span class="workout__icon">${"running"===o.type?"üèÉ‚Äç‚ôÇÔ∏è":"üö¥‚Äç‚ôÄÔ∏è"}</span>\n                    <span class="workout__value">${o.distance}</span>\n                    <span class="workout__unit">km</span>\n                </div>\n                <div class="workout__details">\n                    <span class="workout__icon">‚è±</span>\n                    <span class="workout__value">${o.duration}</span>\n                    <span class="workout__unit">min</span>\n                </div>\n            \n        `;"running"===o.type&&(t+=`\n                    <div class="workout__details">\n                        <span class="workout__icon">‚ö°Ô∏è</span>\n                        <span class="workout__value">${o.pace.toFixed(1)}</span>\n                        <span class="workout__unit">min/km</span>\n                    </div>\n                    <div class="workout__details">\n                        <span class="workout__icon">ü¶∂üèº</span>\n                        <span class="workout__value">${o.cadence}</span>\n                        <span class="workout__unit">spm</span>\n                    </div>\n                </li>\n            `),"cycling"===o.type&&(t+=`\n                    <div class="workout__details">\n                        <span class="workout__icon">‚ö°Ô∏è</span>\n                        <span class="workout__value">${o.speed.toFixed(1)}</span>\n                        <span class="workout__unit">km/h</span>\n                    </div>\n                    <div class="workout__details">\n                        <span class="workout__icon">‚õ∞</span>\n                        <span class="workout__value">${o.elevationGain}</span>\n                        <span class="workout__unit">m</span>\n                    </div>\n                </li>\n            `),form.insertAdjacentHTML("afterend",t)}#L(){inputCadence.value=inputDistance.value=inputDuration.value=inputElevation.value="",form.style.display="none",form.classList.add("hidden"),setTimeout((()=>form.style.display="grid"),1e3)}#d(o){const t=o.target.closest(".workout");if(!t)return;const s=this.#s.find((o=>o.id===t.dataset.id));this.#o.setView(s.coords,this.#e,{animate:!0,pan:{duration:1}})}#g(){localStorage.setItem("workouts",JSON.stringify(this.#s))}#n(){const o=JSON.parse(localStorage.getItem("workouts"));o&&(this.#s=o,this.#s.forEach((o=>{this.#v(o)})))}#u(){this.#h()||window.addEventListener("load",(function(){setTimeout((()=>{dropInModalGuide.classList.contains("dropInModalGuide--hide")&&(dropInModalGuide.classList.remove("dropInModalGuide--hide"),dropInModalGuide.classList.add("dropInModalGuide--show")),dropInModalInfo.classList.contains("dropInModalInfo--hide")&&(dropInModalInfo.classList.remove("dropInModalInfo--hide"),dropInModalInfo.classList.add("dropInModalInfo--show"))}),4e3)}))}#p(){dropInModalCancel.forEach((o=>{o.addEventListener("click",(function(o){const t=o.target.closest(".dropInModal");t&&(t.classList.contains("dropInModalInfo--show")&&(t.classList.remove("dropInModalInfo--show"),t.classList.add("dropInModalInfo--hide")),t.classList.contains("dropInModalGuide--show")&&(t.classList.remove("dropInModalGuide--show"),t.classList.add("dropInModalGuide--hide")))}))}))}#m(){localStorage.setItem("visited-kardio-tracker",!0)}#h(){return localStorage.getItem("visited-kardio-tracker")}reset(){localStorage.removeItem("workouts"),location.reload()}}const app=new App;function geoError(){alert("could not get your position")}
//# sourceMappingURL=index.dfe0f355.js.map
