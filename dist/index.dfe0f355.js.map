{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\n\n// prettier-ignore\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n\n\nclass Workout{\n    date = new Date();\n    id = (Date.now() + '').slice(-10)\n    \n    constructor(coords, distance, duration){\n        this.coords = coords; // An array of lat and lng\n        this.distance = distance; // km\n        this.duration = duration; // min\n    }\n\n    _setDescription(){\n        const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n        'September', 'October', 'November', 'December'];\n        \n        this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${months[this.date.getMonth()]} ${this.date.getDate()}`\n        \n    }\n}\n\nclass Running extends Workout{\n    type = 'running'\n\n    constructor(coords, distance, duration, cadence){\n        super(coords, distance, duration);\n        this.cadence = cadence;\n        this.calcPace()\n        this._setDescription()\n    }\n\n    calcPace(){\n        this.pace = this.duration / (this.distance / 60);\n        return this.pace\n    }\n}\n\nclass Cycling extends Workout{\n    type = 'cycling';\n\n    constructor(coords, distance, duration, elevationGain){\n        super(coords, distance, duration);\n        this.elevationGain = elevationGain;\n        this.calcSpeed()\n        this._setDescription()\n    }\n\n    calcSpeed(){\n        this.speed = this.distance / this.duration\n        return this.speed\n    }\n}\n\n// -------------------------------------------------------------------------------------------------------------------------------\nconst sidebar = document.querySelector('.sidebar')\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst sidebarCancel = document.querySelector('.sidebar__cancelIcon')\nconst workoutsLocator = document.querySelector('.workouts__locator')\nconst inputType = document.querySelector('.form__input--type');\nconst dropInModalInfo = document.querySelector('.dropInModalInfo')\nconst dropInModalGuide = document.querySelector('.dropInModalGuide')\nconst dropInModalCancel = document.querySelectorAll('.dropInModal__cancel')\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\n// APPLICATION ARCHTECTURE\nclass App{\n    #map;\n    #mapEvent;\n    #workouts = []\n    #mapZoomLevel = 13\n\n    constructor(){\n        this.#getPosition();\n        this.#getLocalStorage()\n        form.addEventListener('submit', this.#newWorkOut.bind(this));\n        inputType.addEventListener('change', this.#toggleElevationField);\n        containerWorkouts.addEventListener('click', this.#moveToPopup.bind(this));\n        sidebarCancel.addEventListener('click', this.#hideSidebar.bind(this))\n        workoutsLocator.addEventListener('click', this.#showWorkouts.bind(this))\n        this.#showDropInModal()\n        this.#hideDropInModal()\n        if(!this.#getFirstVisitFromLocalStorage()){\n            window.addEventListener('load', this.#saveFirstVisitToLocalStorage.bind(this))\n        }\n        \n    }\n\n    #getPosition(){\n        if(navigator.geolocation){\n            navigator.geolocation.getCurrentPosition(this.#loadMap.bind(this), geoError)\n        }\n    }\n    \n    #loadMap(position){\n        const { latitude, longitude} = position.coords\n    \n        this.#map = L.map('map').setView([ latitude, longitude], this.#mapZoomLevel);\n\n        L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(this.#map);\n\n        this.#map.on('click', this.#showForm.bind(this))  \n\n        this.#workouts.forEach(work => {\n            this.#renderWorkoutMarker(work)\n        });\n    }\n\n\n    #showForm(e){\n        this.#mapEvent = e\n        form.classList.remove('hidden');\n        // This is for closing the sidebar\n        sidebar.classList.remove('sidebar--hide')\n        sidebar.classList.add('sidebar--show')\n        // This is for hiding the workouts locator\n        if(workoutsLocator.classList.contains('workouts__locator--show')){\n            workoutsLocator.classList.remove('workouts__locator--show')\n            workoutsLocator.classList.add('workouts__locator--hide')\n        }\n        inputDistance.focus();\n    }\n\n    #hideSidebar(e){\n        if(sidebar.classList.contains('sidebar--show')){\n            sidebar.classList.remove('sidebar--show')\n            sidebar.classList.add('sidebar--hide')\n        }\n        if(workoutsLocator.classList.contains('workouts__locator--hide')){\n            workoutsLocator.classList.remove('workouts__locator--hide')\n            workoutsLocator.classList.add('workouts__locator--show')\n        }\n    }\n\n    #showWorkouts(e){\n        if(workoutsLocator.classList.contains('workouts__locator--show')){\n            workoutsLocator.classList.remove('workouts__locator--show')\n            workoutsLocator.classList.add('workouts__locator--hide')\n        }\n        if(!form.classList.contains('hidden')){\n            form.classList.add('hidden')\n        }\n        sidebar.classList.remove('sidebar--hide')\n        sidebar.classList.add('sidebar--show')\n    }\n\n\n\n    #toggleElevationField(){\n        inputElevation.closest('.form__row').classList.toggle('form__row--hidden')\n        inputCadence.closest('.form__row').classList.toggle('form__row--hidden')\n    }\n\n    #newWorkOut(e){\n        const validInputs = (...inputs) => inputs.every(el => Number.isFinite(el));\n\n        const positiveInputs = (...inputs) => inputs.every(el => el > 0);\n\n        e.preventDefault();\n\n        const { lat, lng } = this.#mapEvent.latlng\n        const parent = e.target.closest('.dropInModal')\n        // Get data from form\n        const type = inputType.value;\n        const distance = +inputDistance.value;\n        const duration = +inputDuration.value;\n        let workout;\n\n        // If workout is running, create a running object\n        if(type === 'running'){\n            const cadence = +inputCadence.value\n            // Check if data is valid\n            if(!validInputs(distance, duration, cadence) || !positiveInputs(distance, duration, cadence)){\n                return alert('Inputs have to be a positive number')\n            } \n\n            workout = new Running([lat, lng], distance, duration, cadence)\n        }\n\n        // If workout is cycling, create a cycling object\n        if(type === 'cycling'){\n            const elevation = +inputElevation.value\n            // Check if data is valid\n            if(!validInputs(distance, duration, elevation) || !positiveInputs(distance, duration, elevation)){\n                return alert('Inputs have to be a positive number')\n            }   \n\n            workout = new Cycling([lat, lng], distance, duration, elevation)\n        }\n\n        // Add new object to workout array\n        this.#workouts.push(workout);\n\n        // Render workout on map as a marker\n        this.#renderWorkoutMarker(workout)\n\n        // Render workout on the list\n        this.#renderWorkout(workout)\n\n        // Hide the form and clear the input fields\n        this.#hideForm();\n\n        // Set LocalStorage\n        this.#setLocalStorage()\n\n        // Clear Input fields\n        inputCadence.value = inputDistance.value = inputDuration.value = inputElevation.value = '';\n\n        // Display marker\n        \n    }\n\n    #renderWorkoutMarker(workout){\n        L.marker(workout.coords).addTo(this.#map)\n        .bindPopup(L.popup({\n            maxWidth: 300,\n            minWidth: 100,\n            autoClose:false,\n            closeOnClick: false,\n            className: `${workout.type}-popup`\n        }))\n        .setPopupContent(`${workout.type === 'running' ? '🏃‍♂️': '🚴‍♀️'} ${workout.description}`)\n        .openPopup();\n    }\n\n    #renderWorkout(workout){\n        let html = `\n            <li class=\"workout\" data-id=\"${workout.id}\">\n                <h2 class=\"workout__title\">${workout.description}</h2>\n                <div class=\"workout__details\">\n                    <span class=\"workout__icon\">${workout.type === 'running' ? '🏃‍♂️': '🚴‍♀️'}</span>\n                    <span class=\"workout__value\">${workout.distance}</span>\n                    <span class=\"workout__unit\">km</span>\n                </div>\n                <div class=\"workout__details\">\n                    <span class=\"workout__icon\">⏱</span>\n                    <span class=\"workout__value\">${workout.duration}</span>\n                    <span class=\"workout__unit\">min</span>\n                </div>\n            \n        `;\n        if(workout.type === 'running'){\n            html += `\n                    <div class=\"workout__details\">\n                        <span class=\"workout__icon\">⚡️</span>\n                        <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n                        <span class=\"workout__unit\">min/km</span>\n                    </div>\n                    <div class=\"workout__details\">\n                        <span class=\"workout__icon\">🦶🏼</span>\n                        <span class=\"workout__value\">${workout.cadence}</span>\n                        <span class=\"workout__unit\">spm</span>\n                    </div>\n                </li>\n            `\n        }\n\n        if(workout.type === 'cycling'){\n            html += `\n                    <div class=\"workout__details\">\n                        <span class=\"workout__icon\">⚡️</span>\n                        <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n                        <span class=\"workout__unit\">km/h</span>\n                    </div>\n                    <div class=\"workout__details\">\n                        <span class=\"workout__icon\">⛰</span>\n                        <span class=\"workout__value\">${workout.elevationGain}</span>\n                        <span class=\"workout__unit\">m</span>\n                    </div>\n                </li>\n            `\n        }\n        form.insertAdjacentHTML('afterend', html)\n    }\n\n    #hideForm(){\n        // Empty Inputs\n        inputCadence.value = inputDistance.value = inputDuration.value = inputElevation.value = '';\n        \n        form.style.display = 'none'\n        form.classList.add('hidden')\n\n        setTimeout(() => form.style.display = 'grid', 1000)\n    }\n\n    #moveToPopup(e){\n        const workoutEl = e.target.closest('.workout');\n\n        if(!workoutEl) return;\n\n        const workout = this.#workouts.find(work => work.id === workoutEl.dataset.id)\n        \n        this.#map.setView(workout.coords, this.#mapZoomLevel, {\n            animate: true,\n            pan: {\n                duration: 1\n            }\n        })\n    }\n\n    #setLocalStorage(){\n        localStorage.setItem('workouts', JSON.stringify(this.#workouts));\n\n    }\n\n    #getLocalStorage(){\n        const data = JSON.parse(localStorage.getItem('workouts'));\n        \n        if(!data) return;\n\n        this.#workouts = data;\n\n        this.#workouts.forEach(work => {\n            this.#renderWorkout(work)\n        });\n    }\n\n    #showDropInModal(){\n        if(this.#getFirstVisitFromLocalStorage()) return\n        window.addEventListener('load', function(){\n            setTimeout(() => {\n                if(dropInModalGuide.classList.contains('dropInModalGuide--hide')){\n                    dropInModalGuide.classList.remove('dropInModalGuide--hide')\n                    dropInModalGuide.classList.add('dropInModalGuide--show')\n                }\n        \n                if(dropInModalInfo.classList.contains('dropInModalInfo--hide')){\n                    dropInModalInfo.classList.remove('dropInModalInfo--hide')\n                    dropInModalInfo.classList.add('dropInModalInfo--show')\n                }\n            }, 4000)\n        })\n        \n    }\n\n    #hideDropInModal(){\n        dropInModalCancel.forEach(el => {\n            el.addEventListener('click', function(e){\n                const parent = e.target.closest('.dropInModal')\n                if(!parent) return;\n\n                // remove the modals from the screen\n                if(parent.classList.contains('dropInModalInfo--show')){\n                    parent.classList.remove('dropInModalInfo--show')\n                    parent.classList.add('dropInModalInfo--hide')\n                }\n                if(parent.classList.contains('dropInModalGuide--show')){\n                    parent.classList.remove('dropInModalGuide--show')\n                    parent.classList.add('dropInModalGuide--hide')\n                }\n\n                \n            })\n        })\n    }\n\n    #saveFirstVisitToLocalStorage(){\n        localStorage.setItem('visited-kardio-tracker', true)\n    }\n\n    #getFirstVisitFromLocalStorage(){\n        return localStorage.getItem('visited-kardio-tracker')\n    }\n\n    reset(){\n        localStorage.removeItem('workouts');\n        location.reload()\n    }\n}\n\nconst app = new App()\n\n\nfunction geoError(){\n    alert('could not get your position')\n}\n\n\n\n\n\n"],"names":["months","Workout","date","Date","id","now","slice","constructor","coords","distance","duration","this","_setDescription","description","type","toUpperCase","getMonth","getDate","Running","cadence","super","calcPace","pace","Cycling","elevationGain","calcSpeed","speed","sidebar","document","querySelector","form","containerWorkouts","sidebarCancel","workoutsLocator","inputType","dropInModalInfo","dropInModalGuide","dropInModalCancel","querySelectorAll","inputDistance","inputDuration","inputCadence","inputElevation","App","map","mapEvent","workouts","mapZoomLevel","getPosition","getLocalStorage","addEventListener","newWorkOut","bind","toggleElevationField","moveToPopup","hideSidebar","showWorkouts","showDropInModal","hideDropInModal","getFirstVisitFromLocalStorage","window","saveFirstVisitToLocalStorage","navigator","geolocation","getCurrentPosition","loadMap","geoError","position","latitude","longitude","L","setView","tileLayer","attribution","addTo","on","showForm","forEach","work","renderWorkoutMarker","e","classList","remove","add","contains","focus","e1","e2","closest","toggle","e3","validInputs","inputs","every","el","Number","isFinite","positiveInputs","preventDefault","lat","lng","latlng","target","value","workout","alert","elevation","push","renderWorkout","hideForm","setLocalStorage","workout1","marker","bindPopup","popup","maxWidth","minWidth","autoClose","closeOnClick","className","setPopupContent","openPopup","workout2","html","toFixed","insertAdjacentHTML","style","display","setTimeout","e4","workoutEl","workout3","find","dataset","animate","pan","localStorage","setItem","JSON","stringify","data","parse","getItem","parent","reset","removeItem","location","reload","app"],"version":3,"file":"index.dfe0f355.js.map"}